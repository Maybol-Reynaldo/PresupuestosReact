{"version":3,"sources":["components/Header.js","components/Formulario.js","components/Gasto.js","components/Presupuesto.js","components/Resto.js","components/ListaGastos.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","Component","Formulario","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","enviarGasto","e","preventDefault","descripcionRef","current","value","montoRef","fechaRef","objGasto","uuid","descripcion","monto","fecha","currentTarget","reset","agregarGasto","setState","error","React","createRef","state","onSubmit","htmlFor","readOnly","defaultValue","ref","prototypes","PropTypes","func","isRequired","Gasto","gasto","Presupuesto","presupuesto","Resto","getAlertColor","_this$props","resto","ListaGastos","gastos","Fragment","Presupuesto_Presupuesto","Resto_Resto","map","Gasto_Gasto","key","App","_this$state","push","Header_Header","Formulario_Formulario","ListaGastos_ListaGastos","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb085e93.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Features</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">About</a>\r\n                        </li>\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n                        <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Formulario extends Component {\r\n\r\n    descripcionRef;\r\n    montoRef;\r\n    fechaRef;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.descripcionRef = React.createRef();\r\n        this.montoRef = React.createRef();\r\n        this.fechaRef = React.createRef();\r\n        this.state = {\r\n            error: false\r\n\r\n        }\r\n    }\r\n\r\n    enviarGasto = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(this.descripcionRef.current.value==\"\"||\r\n        this.montoRef.current.value==\"\"||\r\n        this.fechaRef.current.value==\"\"){   \r\n            this.setState({\r\n                error:true\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        let objGasto = {\r\n            id: uuid(),\r\n            descripcion: this.descripcionRef.current.value,\r\n            monto: this.montoRef.current.value,\r\n            fecha: this.fechaRef.current.value,\r\n        }\r\n\r\n        e.currentTarget.reset();\r\n\r\n        this.props.agregarGasto(objGasto);\r\n        this.setState({\r\n            error:false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.enviarGasto}>\r\n                <fieldset>\r\n                    <legend>Gastos y Presupuestos</legend>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Email</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input type=\"text\" readOnly className=\"form-control-plaintext\" id=\"staticEmail\" defaultValue=\"email@example.com\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Descripci√≥n del Gasto</label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"exampleInputEmail1\"\r\n                            placeholder=\"Ejm: Comida\"\r\n                            ref={this.descripcionRef} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Monto del Gasto</label>\r\n                        <input type=\"number\"\r\n                            className=\"form-control\"\r\n                            id=\"exampleInputPassword1\"\r\n                            placeholder=\"Ejm: 100.00\"\r\n                            ref={this.montoRef} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"fechaDelGasto\">Fecha del Gasto</label>\r\n                        <input type=\"date\"\r\n                            className=\"form-control\"\r\n                            id=\"fechaDelGasto\"\r\n                            ref={this.fechaRef} />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Crear Gasto</button>\r\n                </fieldset>\r\n\r\n                {\r\n                    this.state.error ?\r\n                        <div className=\"alert alert-danger mt-5 text-center\">\r\n                            todlos los campos obligoarios\r\n                   </div> : null\r\n                }\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nFormulario.prototypes={\r\n    agregarGasto: PropTypes.func.isRequired,\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Gasto extends Component {\r\n    render() {\r\n        return (\r\n            <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n                <div className=\"d-flex w-100 justify-content-between\">\r\n                    <h5 className=\"mb-1\">{this.props.gasto.descripcion}</h5>\r\n                    <small>{this.props.gasto.fecha}</small>\r\n                </div>\r\n                <p className=\"mb-1\">S/. {this.props.gasto.monto}</p>\r\n                <small>{this.props.gasto.id}</small>\r\n            </a>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport default class Presupuesto extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"alert alert-primary\">\r\n                Tu presupuesto: <strong>S./ {this.props.presupuesto}</strong>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// uso de la clase presupuesto para acceder a pres\r\n\r\nPresupuesto.propTypes={\r\n    presupuesto:PropTypes.number.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Resto extends Component {\r\n\r\n    getAlertColor= () => {\r\n        const {presupuesto, resto} = this.props;\r\n        if(resto >= presupuesto/2){\r\n            return \"alert alert-success\";\r\n        }else if(resto >= presupuesto/4){\r\n            return \"alert alert-warning\"\r\n        }else{\r\n            return \"alert alert-danger\"\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.getAlertColor()}>\r\n                Te quedan: <strong>S/. {this.props.resto}</strong>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Gasto from './Gasto';\r\nimport Presupuesto from './Presupuesto';\r\nimport Resto from './Resto';\r\n\r\nexport default class ListaGastos extends Component {\r\n\r\n    render() {\r\n        let { gastos } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <h4>Lista de Gastos</h4>\r\n                <hr />\r\n                \r\n                <Presupuesto presupuesto={this.props.presupuesto}/>\r\n\r\n                <Resto resto={this.props.resto}\r\n                        presupuesto={this.props.presupuesto}/>\r\n\r\n                <div className=\"list-group mt-2\">\r\n                    \r\n                    {gastos.map(gasto => <Gasto key={gasto.id} gasto={gasto} />)}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from './components/Header';\r\nimport Formulario from './components/Formulario';\r\nimport ListaGastos from './components/ListaGastos';\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      gastos:[],\r\n      presupuesto: 1000,\r\n      resto:1000,\r\n    }\r\n  }\r\n\r\n  agregarGasto = (objGasto) => {\r\n    let {gastos, resto} = this.state;\r\n    gastos.push(objGasto);\r\n\r\n    resto = resto - objGasto.monto;\r\n\r\n    this.setState({\r\n      gastos:gastos,\r\n      resto:resto\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header/>\r\n        <div className=\"container mt-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Formulario agregarGasto={this.agregarGasto}/>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <ListaGastos gastos={this.state.gastos}\r\n                          presupuesto={this.state.presupuesto}\r\n                          resto={this.state.resto}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}